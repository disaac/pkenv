#!/usr/bin/env bash

function error_and_die() {
  echo -e "pkenv: $(basename ${0}): \033[0;31m[ERROR] ${1}\033[0;39m" >&2
  exit 1
}

function info() {
  echo -e "\033[0;32m[INFO] ${1}\033[0;39m"
}

[ -n "${PKENV_DEBUG}" ] && set -x

[ ${#} -gt 1 ] && error_and_die "usage: pkenv uninstall [<version>]"

declare version_requested version regex

if [ -z "${1}" ]; then
  version_file="$(pkenv-version-file)"
  if [ "${version_file}" != "${PKENV_ROOT}/version" ];then
    version_requested="$(cat ${version_file} || true)"
  fi
else
  version_requested="${1}"
fi

if [[ "${version_requested}" =~ ^latest\:.*$ ]]; then
  version="${version_requested%%\:*}"
  regex="${version_requested##*\:}"
elif [[ "${version_requested}" =~ ^latest$ ]]; then
  version="${version_requested}"
  regex=""
else
  version="${version_requested}"
  regex="${version_requested}"
fi

[ -n "${version}" ] || error_and_die "Version is not specified"
version="$(pkenv-list | grep -e "${regex}" | head -n 1 )"
[ -n "${version}" ] || error_and_die "No versions matching '${1}' found in local"

dst_path="${PKENV_ROOT}/versions/${version}"
if [ -f ${dst_path}/packer ]; then
  info "Uninstall Packer v${version}"
  rm -r ${dst_path}
  info "\033[0;32mPacker v${version} is successfully uninstalled\033[0;39m"
fi

